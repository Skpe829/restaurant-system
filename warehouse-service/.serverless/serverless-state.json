{
  "service": {
    "service": "restaurant-warehouse-service",
    "serviceObject": {
      "name": "restaurant-warehouse-service"
    },
    "provider": {
      "name": "aws",
      "runtime": "provided.al2",
      "region": "us-east-1",
      "stage": "dev",
      "environment": {
        "STAGE": "dev",
        "REGION": "us-east-1"
      },
      "versionFunctions": true,
      "deploymentMethod": "direct",
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "WebLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/restaurant-warehouse-service-dev-web"
            }
          },
          "ArtisanLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/restaurant-warehouse-service-dev-artisan"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "restaurant-warehouse-service",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/restaurant-warehouse-service-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/restaurant-warehouse-service-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "restaurant-warehouse-service",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "WebLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/restaurant-warehouse-service/dev/1751081246356-2025-06-28T03:27:26.356Z/restaurant-warehouse-service.zip"
              },
              "Handler": "public/index.php",
              "Runtime": "provided.al2",
              "FunctionName": "restaurant-warehouse-service-dev-web",
              "MemorySize": 512,
              "Timeout": 28,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "REGION": "us-east-1",
                  "BREF_BINARY_RESPONSES": "1",
                  "APP_ENV": "production",
                  "APP_DEBUG": "false",
                  "APP_KEY": "base64:ZYNikPgxfyC/VuJ7XxJBm5rGQdP8qI5nkPMuLvGZThY=",
                  "DB_CONNECTION": "array",
                  "CACHE_DRIVER": "array",
                  "SESSION_DRIVER": "array",
                  "QUEUE_CONNECTION": "sync",
                  "LOG_CHANNEL": "stderr",
                  "ORDER_SERVICE_URL": "https://hkg61nbow3.execute-api.us-east-1.amazonaws.com"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:534081306603:layer:php-82-fpm:99"
              ]
            },
            "DependsOn": [
              "WebLogGroup"
            ]
          },
          "ArtisanLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/restaurant-warehouse-service/dev/1751081246356-2025-06-28T03:27:26.356Z/restaurant-warehouse-service.zip"
              },
              "Handler": "artisan",
              "Runtime": "provided.al2",
              "FunctionName": "restaurant-warehouse-service-dev-artisan",
              "MemorySize": 1024,
              "Timeout": 120,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "REGION": "us-east-1",
                  "APP_ENV": "production",
                  "APP_KEY": "base64:ZYNikPgxfyC/VuJ7XxJBm5rGQdP8qI5nkPMuLvGZThY=",
                  "DB_CONNECTION": "array"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:534081306603:layer:php-82:99",
                "arn:aws:lambda:us-east-1:534081306603:layer:console:108"
              ]
            },
            "DependsOn": [
              "ArtisanLogGroup"
            ]
          },
          "WebLambdaVersionJb5k4hSIVdoiEA6HMLytH52hHxiH6XMC4heFBlfh0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WebLambdaFunction"
              },
              "CodeSha256": "TZbK3VUx+nmkK/1DnFBYnToz+4nPV6uqJ1tSJaoTwaI="
            }
          },
          "ArtisanLambdaVersion47cl5jHs3kUvqtZ58GibMlXODZo8Hc8EY89ed8K8D4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ArtisanLambdaFunction"
              },
              "CodeSha256": "TZbK3VUx+nmkK/1DnFBYnToz+4nPV6uqJ1tSJaoTwaI="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-restaurant-warehouse-service",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "WebLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "WebLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationWeb": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"WebLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteAnyProxyVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "ANY /{proxy+}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationWeb"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationWeb"
          },
          "HttpApiRouteAny": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "ANY /",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationWeb"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationWeb"
          },
          "InventoryTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "restaurant-inventory-dev",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "ingredient",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "ingredient",
                  "KeyType": "HASH"
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-restaurant-warehouse-service-dev-ServerlessDeploymentBucketName"
            }
          },
          "WebLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WebLambdaVersionJb5k4hSIVdoiEA6HMLytH52hHxiH6XMC4heFBlfh0"
            },
            "Export": {
              "Name": "sls-restaurant-warehouse-service-dev-WebLambdaFunctionQualifiedArn"
            }
          },
          "ArtisanLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ArtisanLambdaVersion47cl5jHs3kUvqtZ58GibMlXODZo8Hc8EY89ed8K8D4"
            },
            "Export": {
              "Name": "sls-restaurant-warehouse-service-dev-ArtisanLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-restaurant-warehouse-service-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-restaurant-warehouse-service-dev-HttpApiUrl"
            }
          },
          "WarehouseServiceUrl": {
            "Description": "Warehouse Service API URL",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  "us-east-1",
                  ".amazonaws.com"
                ]
              ]
            },
            "Export": {
              "Name": "WarehouseServiceUrl-dev"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "httpApi": {
        "cors": {
          "allowedOrigins": [
            "http://localhost:3000",
            "https://*.vercel.app"
          ],
          "allowedHeaders": [
            "Content-Type",
            "Authorization"
          ],
          "allowedMethods": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "OPTIONS"
          ],
          "allowCredentials": true
        }
      }
    },
    "plugins": [
      "./vendor/bref/bref"
    ],
    "pluginsData": {},
    "functions": {
      "web": {
        "handler": "public/index.php",
        "timeout": 28,
        "memorySize": 512,
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"WebLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "environment": {
          "BREF_BINARY_RESPONSES": "1",
          "APP_ENV": "production",
          "APP_DEBUG": "false",
          "APP_KEY": "base64:ZYNikPgxfyC/VuJ7XxJBm5rGQdP8qI5nkPMuLvGZThY=",
          "DB_CONNECTION": "array",
          "CACHE_DRIVER": "array",
          "SESSION_DRIVER": "array",
          "QUEUE_CONNECTION": "sync",
          "LOG_CHANNEL": "stderr",
          "ORDER_SERVICE_URL": "https://hkg61nbow3.execute-api.us-east-1.amazonaws.com"
        },
        "events": [
          {
            "httpApi": {
              "path": "/{proxy+}",
              "method": "ANY"
            },
            "resolvedMethod": "ANY",
            "resolvedPath": "/{proxy+}"
          },
          {
            "httpApi": {
              "path": "/",
              "method": "ANY"
            },
            "resolvedMethod": "ANY",
            "resolvedPath": "/"
          }
        ],
        "name": "restaurant-warehouse-service-dev-web",
        "package": {},
        "memory": 512,
        "runtime": "provided.al2",
        "vpc": {},
        "versionLogicalId": "WebLambdaVersionJb5k4hSIVdoiEA6HMLytH52hHxiH6XMC4heFBlfh0"
      },
      "artisan": {
        "handler": "artisan",
        "timeout": 120,
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ArtisanLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "environment": {
          "APP_ENV": "production",
          "APP_KEY": "base64:ZYNikPgxfyC/VuJ7XxJBm5rGQdP8qI5nkPMuLvGZThY=",
          "DB_CONNECTION": "array"
        },
        "events": [],
        "name": "restaurant-warehouse-service-dev-artisan",
        "package": {},
        "memory": 1024,
        "runtime": "provided.al2",
        "vpc": {},
        "versionLogicalId": "ArtisanLambdaVersion47cl5jHs3kUvqtZ58GibMlXODZo8Hc8EY89ed8K8D4"
      }
    },
    "resources": {
      "Resources": {
        "InventoryTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "restaurant-inventory-dev",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "ingredient",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "ingredient",
                "KeyType": "HASH"
              }
            ]
          }
        }
      },
      "Outputs": {
        "WarehouseServiceUrl": {
          "Description": "Warehouse Service API URL",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "HttpApi"
                },
                ".execute-api.",
                "us-east-1",
                ".amazonaws.com"
              ]
            ]
          },
          "Export": {
            "Name": "WarehouseServiceUrl-dev"
          }
        }
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "restaurant-warehouse-service",
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/mcastillo/personal-workspace/restaurant-system/warehouse-service/.serverless/restaurant-warehouse-service.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/restaurant-warehouse-service/dev/1751081246356-2025-06-28T03:27:26.356Z",
    "artifact": "restaurant-warehouse-service.zip"
  }
}